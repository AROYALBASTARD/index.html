<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>D E L T Î” | EXCELLENCE TRACKER</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body { 
            font-family: 'Inter', 'Segoe UI', Arial, sans-serif; 
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
            color: #e5e5e5;
            min-height: 100vh;
            line-height: 1.6;
        }

        .header { 
            background: linear-gradient(135deg, #000000 0%, #1a1a1a 50%, #2a2a2a 100%);
            border-bottom: 2px solid #333;
            padding: 2rem 0;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(0,255,100,0.05), transparent);
            animation: shimmer 3s ease-in-out infinite;
        }

        @keyframes shimmer {
            0%, 100% { transform: translateX(-100%); }
            50% { transform: translateX(100%); }
        }

        .header h1 { 
            font-size: 2.5rem;
            font-weight: 700;
            letter-spacing: 2px;
            margin-bottom: 0.5rem;
            background: linear-gradient(135deg, #ffffff, #cccccc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-transform: uppercase;
            position: relative;
            z-index: 1;
        }

        .header .subtitle {
            font-size: 0.9rem;
            color: #888;
            letter-spacing: 1px;
            text-transform: uppercase;
            position: relative;
            z-index: 1;
        }

        .container { 
            max-width: 1200px; 
            margin: 2rem auto; 
            padding: 2rem;
            background: rgba(20, 20, 20, 0.8);
            border: 1px solid #333;
            border-radius: 8px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }

        .controls { 
            margin-bottom: 2rem; 
            display: flex; 
            gap: 1rem; 
            flex-wrap: wrap;
            align-items: center;
        }

        .controls label {
            color: #ccc;
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 1px;
        }

        select, button { 
            padding: 0.7rem 1.2rem; 
            border: 1px solid #444;
            border-radius: 4px;
            font-size: 0.9rem;
            background: #1a1a1a;
            color: #e5e5e5;
            transition: all 0.3s ease;
        }

        select:focus, button:focus {
            outline: none;
            border-color: #666;
            box-shadow: 0 0 0 2px rgba(255,255,255,0.1);
        }

        button { 
            background: linear-gradient(135deg, #2a2a2a, #1a1a1a);
            cursor: pointer;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        button:hover { 
            background: linear-gradient(135deg, #3a3a3a, #2a2a2a);
            transform: translateY(-1px);
        }

        .reset-btn {
            background: linear-gradient(135deg, #4a1a1a, #2a0a0a) !important;
        }

        .reset-btn:hover {
            background: linear-gradient(135deg, #5a2a2a, #3a1a1a) !important;
        }

        #successMessage { 
            color: #00ff88;
            font-weight: 700;
            text-align: center;
            margin: 1.5rem 0;
            padding: 1rem;
            background: rgba(0, 255, 136, 0.1);
            border: 1px solid #00ff88;
            border-radius: 4px;
            text-transform: uppercase;
            letter-spacing: 1px;
            display: none;
            animation: glow 2s ease-in-out infinite;
        }

        @keyframes glow {
            0%, 100% { 
                box-shadow: 0 0 5px rgba(0, 255, 136, 0.3);
                opacity: 1; 
            }
            50% { 
                box-shadow: 0 0 20px rgba(0, 255, 136, 0.5);
                opacity: 0.9; 
            }
        }

        table { 
            width: 100%; 
            border-collapse: collapse; 
            margin-top: 1.5rem; 
            background: rgba(10, 10, 10, 0.5);
            border: 1px solid #333;
            border-radius: 8px;
            overflow: hidden;
        }

        th, td { 
            border: 1px solid #333; 
            padding: 1rem 0.5rem; 
            text-align: center;
            position: relative;
        }

        th { 
            background: linear-gradient(135deg, #2a2a2a, #1a1a1a);
            color: #ffffff;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.8rem;
        }

        th:first-child {
            text-align: left;
            padding-left: 1rem;
            background: linear-gradient(135deg, #1a3a1a, #0a2a0a);
        }

        td:first-child {
            text-align: left;
            padding-left: 1rem;
            font-weight: 500;
            background: rgba(10, 40, 10, 0.5);
            color: #88ff88;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .checkbox { 
            width: 18px;
            height: 18px;
            margin: 0 auto;
            cursor: pointer;
            accent-color: #00ff88;
        }

        .checkbox:checked {
            accent-color: #00ff88;
        }

        #screenshotSection { 
            margin-top: 2rem;
            padding: 1.5rem;
            background: rgba(30, 30, 30, 0.5);
            border: 1px solid #333;
            border-radius: 8px;
        }

        #screenshotSection h3 {
            margin-bottom: 1rem;
            color: #fff;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 1rem;
        }

        #screenshotSection input[type="file"] { 
            margin-bottom: 1rem;
            padding: 0.5rem;
            background: #1a1a1a;
            border: 1px solid #444;
            border-radius: 4px;
            color: #ccc;
            width: 100%;
        }

        #screenshotSection img { 
            max-width: 100%; 
            height: auto; 
            margin: 1rem 0; 
            border: 1px solid #444;
            border-radius: 4px;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }

        #clearScreenshots, #exportData { 
            background: linear-gradient(135deg, #1a4a1a, #0a3a0a);
            color: white;
            border: 1px solid #666;
        }

        #clearScreenshots:hover, #exportData:hover { 
            background: linear-gradient(135deg, #2a5a2a, #1a4a1a);
        }

        #summary { 
            margin-top: 2rem; 
            padding: 1.5rem; 
            background: rgba(10, 40, 10, 0.3);
            border: 1px solid #333;
            border-radius: 8px;
        }

        #summary h3 {
            margin-bottom: 1rem;
            color: #fff;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        #mostFrequentSuccess {
            font-size: 1rem;
            color: #88ff88;
        }

        .rules {
            margin-top: 2rem;
            padding: 2rem;
            background: rgba(40, 40, 40, 0.5);
            border: 1px solid #444;
            border-radius: 8px;
        }

        .rules h2 {
            color: #00ff88;
            margin-bottom: 1rem;
            text-transform: uppercase;
            letter-spacing: 2px;
            font-size: 1.3rem;
            text-align: center;
        }

        .rules p {
            margin-bottom: 1rem;
            color: #ccc;
            text-align: center;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .rules h3 {
            color: #fff;
            margin: 1.5rem 0 1rem 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .rules ol {
            color: #ccc;
            padding-left: 2rem;
            line-height: 1.8;
        }

        .rules li {
            margin-bottom: 0.5rem;
        }

        footer { 
            text-align: center; 
            padding: 1rem; 
            background: linear-gradient(135deg, #0a0a0a, #1a1a1a);
            border-top: 1px solid #333;
            color: #666;
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 2rem;
        }

        .precision-indicator {
            position: absolute;
            top: 10px;
            right: 20px;
            color: #666;
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            z-index: 1;
        }

        .excellence-count {
            background: rgba(0, 255, 136, 0.2);
            padding: 0.3rem 0.6rem;
            border-radius: 4px;
            border: 1px solid #00ff88;
            color: #00ff88;
            font-weight: 600;
        }

        tr:hover {
            background: rgba(0, 255, 136, 0.02);
        }

        .continue-column {
            background: linear-gradient(135deg, #0a2a0a, #051a05) !important;
        }

        .header.excellence-mode {
            background: linear-gradient(135deg, #003300 0%, #1a4a1a 50%, #2a5a2a 100%) !important;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 1.8rem;
            }
            
            .container {
                margin: 1rem;
                padding: 1rem;
            }
            
            table {
                font-size: 0.8rem;
            }
            
            th, td {
                padding: 0.5rem 0.25rem;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .precision-indicator {
                position: static;
                margin-bottom: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="precision-indicator">EXCELLENCE THROUGH PURPOSE</div>
        <h1>DELTA | EXCELLENCE TRACKER</h1>
        <div class="subtitle">Precision Through Positive Execution â€¢ Reinforce Trading Excellence</div>
    </div>

    <div class="container">
        <div class="controls">
            <label for="tradeCount">EXCELLENCE LIMIT:</label>
            <select id="tradeCount" onchange="saveState()">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5" selected>5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
                <option value="9">9</option>
            </select>
            <button class="reset-btn" onclick="resetAll()">RESET ALL DATA</button>
        </div>

        <div id="successMessage">EXCELLENCE ACHIEVED â€¢ CONTINUE ASCENSION â€¢ MAINTAIN MOMENTUM</div>

        <table id="tradeTable">
            <tr>
                <th>EXCELLENCE EXECUTION</th>
                <th>1</th>
                <th>2</th>
                <th>3</th>
                <th>4</th>
                <th>5</th>
                <th>6</th>
                <th>7</th>
                <th>8</th>
                <th>9</th>
                <th class="continue-column">ASCEND</th>
            </tr>
            <tr>
                <td>OPTIMAL RISK/REWARD EXECUTION</td>
                <td><input type="checkbox" class="checkbox" data-id="orr-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="orr-9" onchange="saveState()"></td>
                <td rowspan="7" class="continue-column"><input type="checkbox" class="checkbox" data-id="continue" onchange="showSuccessMessage()"></td>
            </tr>
            <tr>
                <td>PRECISION ENTRY TIMING</td>
                <td><input type="checkbox" class="checkbox" data-id="eot-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="eot-9" onchange="saveState()"></td>
            </tr>
            <tr>
                <td>DISCIPLINED EXIT EXECUTION</td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="ewd-9" onchange="saveState()"></td>
            </tr>
            <tr>
                <td>PLAN-ALIGNED EXECUTION</td>
                <td><input type="checkbox" class="checkbox" data-id="awt-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="awt-9" onchange="saveState()"></td>
            </tr>
            <tr>
                <td>PRECISION STOP PLACEMENT</td>
                <td><input type="checkbox" class="checkbox" data-id="csp-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="csp-9" onchange="saveState()"></td>
            </tr>
            <tr>
                <td>CALCULATED POSITION SIZING</td>
                <td><input type="checkbox" class="checkbox" data-id="aps-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="aps-9" onchange="saveState()"></td>
            </tr>
            <tr>
                <td>PLANNED TRADE EXECUTION</td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-1" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-2" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-3" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-4" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-5" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-6" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-7" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-8" onchange="saveState()"></td>
                <td><input type="checkbox" class="checkbox" data-id="tpt-9" onchange="saveState()"></td>
            </tr>
        </table>

        <div id="screenshotSection">
            <h3>EXCELLENCE DOCUMENTATION</h3>
            <input type="file" id="screenshotUpload" accept="image/*" onchange="handleScreenshotUpload(event)" multiple>
            <div class="action-buttons">
                <button id="clearScreenshots" onclick="clearScreenshots()">CLEAR EVIDENCE</button>
                <button id="exportData" onclick="exportData()">EXPORT DATA</button>
            </div>
            <div id="screenshotContainer"></div>
        </div>

        <div id="summary">
            <h3>EXCELLENCE ANALYSIS</h3>
            <p id="mostFrequentSuccess">Calculating excellence pattern dominance...</p>
        </div>

        <div class="rules">
            <h2>EXCELLENCE BUILDS MARKET MASTERY</h2>
            <p>SYSTEMATIC REINFORCEMENT ACCELERATES ASCENSION</p>
            <p>CONSISTENT EXCELLENCE IS THE FOUNDATION OF PROFITABILITY</p>
            <h3>EXCELLENCE PROTOCOL:</h3>
            <ol>
                <li>Document each excellent execution immediately in the corresponding achievement box.</li>
                <li>Identify your dominant excellence pattern and systematically reinforce.</li>
                <li>Strengthen your most consistent excellence before expanding to secondary patterns.</li>
                <li>Ten consecutive excellent executions in any category indicates mastery readiness for advanced strategies.</li>
            </ol>
        </div>
    </div>

    <footer>
        <p>Â© 2025 DELTA AGREEMENT â€¢ EXCELLENCE THROUGH PURPOSE â€¢ ALL RIGHTS RESERVED</p>
    </footer>

    <script>
        // Global state storage (using memory instead of localStorage for Claude.ai compatibility)
        let appState = {
            checkboxes: {},
            screenshots: [],
            tradeCount: 5
        };

        document.addEventListener('DOMContentLoaded', function() {
            loadState();
            updateSummary();
            checkSuccessMessage();
        });

        function saveState() {
            const checkboxes = document.querySelectorAll('.checkbox');
            checkboxes.forEach(cb => {
                appState.checkboxes[cb.getAttribute('data-id')] = cb.checked;
            });
            appState.tradeCount = document.getElementById('tradeCount').value;
            updateSummary();
            updateCount();
        }

        function loadState() {
            const checkboxes = document.querySelectorAll('.checkbox');
            checkboxes.forEach(cb => {
                const id = cb.getAttribute('data-id');
                if (appState.checkboxes[id] !== undefined) {
                    cb.checked = appState.checkboxes[id];
                }
            });
            document.getElementById('tradeCount').value = appState.tradeCount;
            displayScreenshots();
        }

        function updateCount() {
            const checkboxes = document.querySelectorAll('.checkbox');
            let count = 0;
            checkboxes.forEach(cb => { if (cb.checked) count++; });
            
            const header = document.querySelector('.header');
            if (count > 5) {
                header.classList.add('excellence-mode');
            } else {
                header.classList.remove('excellence-mode');
            }
        }

        function resetAll() {
            if (confirm('RESET ALL EXCELLENCE DATA? This action cannot be undone.')) {
                if (confirm('CONFIRM: RESET ALL EXCELLENCE DATA? This action is irreversible.')) {
                    document.querySelectorAll('.checkbox').forEach(cb => cb.checked = false);
                    document.getElementById('tradeCount').value = '5';
                    document.querySelector('.header').classList.remove('excellence-mode');
                    document.getElementById('successMessage').style.display = 'none';
                    
                    // Reset state
                    appState = {
                        checkboxes: {},
                        screenshots: [],
                        tradeCount: 5
                    };
                    
                    document.getElementById('screenshotContainer').innerHTML = '';
                    updateSummary();
                }
            }
        }

        function showSuccessMessage() {
            const continueCheckbox = document.querySelector('[data-id="continue"]');
            document.getElementById('successMessage').style.display = continueCheckbox.checked ? 'block' : 'none';
            saveState();
        }

        function checkSuccessMessage() {
            const continueCheckbox = document.querySelector('[data-id="continue"]');
            if (continueCheckbox) {
                document.getElementById('successMessage').style.display = continueCheckbox.checked ? 'block' : 'none';
            }
        }

        function handleScreenshotUpload(event) {
            const files = event.target.files;
            if (files.length > 5) {
                alert('LIMITATION: Maximum 5 excellence files per upload session.');
                return;
            }

            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const screenshot = {
                        src: e.target.result,
                        timestamp: new Date().toISOString(),
                        name: file.name
                    };
                    appState.screenshots.push(screenshot);
                    displayScreenshots();
                };
                reader.readAsDataURL(file);
            });
        }

        function displayScreenshots() {
            const container = document.getElementById('screenshotContainer');
            container.innerHTML = '';
            
            appState.screenshots.forEach((screenshot, index) => {
                const div = document.createElement('div');
                div.style.marginBottom = '1rem';
                
                const img = document.createElement('img');
                img.src = screenshot.src;
                img.style.maxWidth = '100%';
                img.style.height = 'auto';
                img.style.border = '1px solid #444';
                img.style.borderRadius = '4px';
                
                const info = document.createElement('div');
                info.style.color = '#888';
                info.style.fontSize = '0.8rem';
                info.style.marginTop = '0.5rem';
                info.innerHTML = `
                    <div>File: ${screenshot.name}</div>
                    <div>Documented: ${new Date(screenshot.timestamp).toLocaleString()}</div>
                `;
                
                const deleteBtn = document.createElement('button');
                deleteBtn.textContent = 'DELETE';
                deleteBtn.style.marginTop = '0.5rem';
                deleteBtn.style.padding = '0.3rem 0.6rem';
                deleteBtn.style.fontSize = '0.7rem';
                deleteBtn.style.background = 'linear-gradient(135deg, #4a1a1a, #2a0a0a)';
                deleteBtn.style.border = '1px solid #666';
                deleteBtn.style.color = 'white';
                deleteBtn.style.borderRadius = '3px';
                deleteBtn.style.cursor = 'pointer';
                deleteBtn.onclick = function() {
                    appState.screenshots.splice(index, 1);
                    displayScreenshots();
                };
                
                div.appendChild(img);
                div.appendChild(info);
                div.appendChild(deleteBtn);
                container.appendChild(div);
            });
        }

        function clearScreenshots() {
            if (confirm('Clear all excellence documentation?')) {
                appState.screenshots = [];
                document.getElementById('screenshotContainer').innerHTML = '';
            }
        }

        function updateSummary() {
            const counts = {
                'orr': 0, 'eot': 0, 'ewd': 0, 'awt': 0, 'csp': 0, 'aps': 0, 'tpt': 0
            };
            
            Object.keys(appState.checkboxes).forEach(key => {
                if (appState.checkboxes[key]) {
                    const habit = key.substring(0, 3);
                    if (counts[habit] !== undefined) {
                        counts[habit]++;
                    }
                }
            });
            
            const maxHabit = Object.keys(counts).reduce((a, b
